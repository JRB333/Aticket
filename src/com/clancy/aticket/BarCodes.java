package com.clancy.aticket;

import java.io.IOException;
import java.io.OutputStream;

public class BarCodes {
	
	public static final byte[] HorizontalCode39Asterik = new byte[] {
		(byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0x3C, (byte) 0xF3 
		}; //
	
	public static final byte[] HorizontalCode39Space = new byte[] {
		(byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3, 
	    (byte) 0xC3, (byte) 0xCC, (byte) 0xF3
		};//72 bytes
	
	public static final byte[] HorizontalCode39One = new byte[] {	
		(byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xCF
		};// 72 bytes

	public static final byte[] HorizontalCode39Two = new byte[] {
		(byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xCF
		};
	public static final byte[] HorizontalCode39Three = new byte[] {
		(byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xC3, (byte) 0x33
		};

	public static final byte[] HorizontalCode39Four = new byte[] {
		(byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xCF
		};
	
	public static final byte[] HorizontalCode39Five = new byte[] {
		(byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xF3, (byte) 0xF, (byte) 0x33
		};
	
	public static final byte[] HorizontalCode39Six = new byte[] {
		(byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33, 
	    (byte) 0xCF, (byte) 0xF, (byte) 0x33
		};
	
	public static final byte[] HorizontalCode39Seven = new byte[] {
		(byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF, 
	    (byte) 0xCC, (byte) 0x33, (byte) 0xCF		
		};
	
	public static final byte[] HorizontalCode39Eight = new byte[] {
		(byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xF3, (byte) 0xC, (byte) 0xF3
		};
	
	public static final byte[] HorizontalCode39Nine = new byte[] {
		(byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3, 
	    (byte) 0xCF, (byte) 0xC, (byte) 0xF3
		};
	
	public static final byte[] HorizontalCode39Zero = new byte[] {
		(byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3, 
	    (byte) 0xCC, (byte) 0x3C, (byte) 0xF3
		};
	
	public static final byte[] HorizontalCode39A = new byte[] {(byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xCF}; 

    public static final byte[] HorizontalCode39B = new byte[] {(byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xCF};

    public static final byte[] HorizontalCode39C = new byte[] {(byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0x33};

    public static final byte[] HorizontalCode39D = new byte[] {(byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xCF}; 

    public static final byte[] HorizontalCode39E = new byte[] {(byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0x33};

    public static final byte[] HorizontalCode39F = new byte[] {(byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0x33};

    public static final byte[] HorizontalCode39G = new byte[] {(byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF, 
    (byte) 0xCC, (byte) 0xC3, (byte) 0xCF};

    public static final byte[] HorizontalCode39H = new byte[] {(byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xF3, (byte) 0x30, (byte) 0xF3};

    public static final byte[] HorizontalCode39I = new byte[] {(byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3, 
    (byte) 0xCF, (byte) 0x30, (byte) 0xF3};

    public static final byte[] HorizontalCode39J = new byte[] {(byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3, 
    (byte) 0xCC, (byte) 0xF0, (byte) 0xF3};

    public static final byte[] HorizontalCode39K = new byte[] {(byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xF};

    public static final byte[] HorizontalCode39L = new byte[] {(byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xF};

    public static final byte[] HorizontalCode39M = new byte[] {(byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0xCC, (byte) 0xC3};

    public static final byte[] HorizontalCode39N = new byte[] {(byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xF};

    public static final byte[] HorizontalCode39O = new byte[] {(byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x3C, (byte) 0xC3};

    public static final byte[] HorizontalCode39P = new byte[] {(byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x3C, (byte) 0xC3};

    public static final byte[] HorizontalCode39Q = new byte[] {(byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF, 
    (byte) 0xCC, (byte) 0xCF, (byte) 0xF};

    public static final byte[] HorizontalCode39R = new byte[] {(byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xF3, (byte) 0x33, (byte) 0xC3};

    public static final byte[] HorizontalCode39S = new byte[] {(byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3, 
    (byte) 0xCF, (byte) 0x33, (byte) 0xC3};

    public static final byte[] HorizontalCode39T = new byte[] {(byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3, 
    (byte) 0xCC, (byte) 0xF3, (byte) 0xC3};

    public static final byte[] HorizontalCode39U = new byte[] {(byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xF0, (byte) 0xCC, (byte) 0xCF};

    public static final byte[] HorizontalCode39V = new byte[] {(byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0xCC, (byte) 0xCF};

    public static final byte[] HorizontalCode39W = new byte[] {(byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xF3, (byte) 0x33};

    public static final byte[] HorizontalCode39X = new byte[] {(byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF, 
    (byte) 0xC3, (byte) 0x3C, (byte) 0xCF};

    public static final byte[] HorizontalCode39Y = new byte[] {(byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xF0, (byte) 0xCF, (byte) 0x33};

    public static final byte[] HorizontalCode39Z = new byte[] {(byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33, 
    (byte) 0xC3, (byte) 0xCF, (byte) 0x33};
    
    public static void HorizontalCode39(String ParseString, OutputStream outputStream)
    {
    	String DistinctChars = "";
    	int z = 0;
    	int p = 0;
    	for(z=32; z<91; z++)
    	{
    		//for (p=0; p < (ParseString.length()-1); p++)
    		for (p=0; p < ParseString.length(); p++)
    		{
    			byte b = (byte) z;
    			String tempChar = new String(new byte[] {b});
    			if (ParseString.substring(p, p+1).equals(tempChar))
    			{
        			DistinctChars = DistinctChars + ParseString.substring(p,p+1);  
        			p=1000;
    			}    			
    		}
    	}
    	try {
			outputStream.write(0x1B);
			outputStream.write(0x3D);
			outputStream.write(0x1);//page  7-58 SET LSB TO RIGHT 
			DefineOnlyUsedCharacters(DistinctChars, outputStream);
			outputStream.write(0x12);
			outputStream.write(0x4F);
			outputStream.write(0x1); //7 -28 Download Character Select
			ReadLayout.PrintThis("  ", outputStream);
			outputStream.write(0xB0);
			//for (p=0; p< (ParseString.length()-1); p++)
			for (p=0; p < ParseString.length(); p++)
			{
				//for (z=0; z<(DistinctChars.length()-1); z++) 
				for (z=0; z<DistinctChars.length(); z++)
				{
					if (ParseString.substring(p, p+1).equals(DistinctChars.substring(z, z+1)))
					{
						outputStream.write((byte) (177+z));
					}
				}
			}
			outputStream.write(0xB0);
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
    	
    }
    
    public static void DefineOnlyUsedCharacters(String DistinctChars, OutputStream outputStream )
    {
		try {
			outputStream.write(0x12);
			outputStream.write(0x50);
			outputStream.write(0xB0);
			byte b = (byte) (DistinctChars.length()+176);
			outputStream.write(b);
			//outputStream.write((byte) (DistinctChars.length()+176));
			outputStream.write(0x18);
			outputStream.write(0x18);//7 -26
			outputStream.write(HorizontalCode39Asterik);
			for (int i = 0; i < DistinctChars.length(); i++)
			{
				if (DistinctChars.substring(i,i+1).equals(" "))
					outputStream.write(HorizontalCode39Space);
				else if (DistinctChars.substring(i,i+1).equals("0"))
					outputStream.write(HorizontalCode39Zero);
				else if (DistinctChars.substring(i,i+1).equals("1"))
					outputStream.write(HorizontalCode39One);
				else if (DistinctChars.substring(i,i+1).equals("2"))
					outputStream.write(HorizontalCode39Two);
				else if (DistinctChars.substring(i,i+1).equals("3"))
					outputStream.write(HorizontalCode39Three);
				else if (DistinctChars.substring(i,i+1).equals("4"))
					outputStream.write(HorizontalCode39Four);
				else if (DistinctChars.substring(i,i+1).equals("5"))
					outputStream.write(HorizontalCode39Five);
				else if (DistinctChars.substring(i,i+1).equals("6"))
					outputStream.write(HorizontalCode39Six);
				else if (DistinctChars.substring(i,i+1).equals("7"))
					outputStream.write(HorizontalCode39Seven);
				else if (DistinctChars.substring(i,i+1).equals("8"))
					outputStream.write(HorizontalCode39Eight);
				else if (DistinctChars.substring(i,i+1).equals("9"))
					outputStream.write(HorizontalCode39Nine);
				else if (DistinctChars.substring(i,i+1).equals("A"))
					outputStream.write(HorizontalCode39A);
				else if (DistinctChars.substring(i,i+1).equals("B"))
					outputStream.write(HorizontalCode39B);
				else if (DistinctChars.substring(i,i+1).equals("C"))
					outputStream.write(HorizontalCode39C);
				else if (DistinctChars.substring(i,i+1).equals("D"))
					outputStream.write(HorizontalCode39D);
				else if (DistinctChars.substring(i,i+1).equals("E"))
					outputStream.write(HorizontalCode39E);
				else if (DistinctChars.substring(i,i+1).equals("F"))
					outputStream.write(HorizontalCode39F);
				else if (DistinctChars.substring(i,i+1).equals("G"))
					outputStream.write(HorizontalCode39G);
				else if (DistinctChars.substring(i,i+1).equals("H"))
					outputStream.write(HorizontalCode39H);
				else if (DistinctChars.substring(i,i+1).equals("I"))
					outputStream.write(HorizontalCode39I);
				else if (DistinctChars.substring(i,i+1).equals("J"))
					outputStream.write(HorizontalCode39J);
				else if (DistinctChars.substring(i,i+1).equals("K"))
					outputStream.write(HorizontalCode39K);
				else if (DistinctChars.substring(i,i+1).equals("L"))
					outputStream.write(HorizontalCode39L);
				else if (DistinctChars.substring(i,i+1).equals("M"))
					outputStream.write(HorizontalCode39M);
				else if (DistinctChars.substring(i,i+1).equals("N"))
					outputStream.write(HorizontalCode39N);
				else if (DistinctChars.substring(i,i+1).equals("O"))
					outputStream.write(HorizontalCode39O);
				else if (DistinctChars.substring(i,i+1).equals("P"))
					outputStream.write(HorizontalCode39P);
				else if (DistinctChars.substring(i,i+1).equals("Q"))
					outputStream.write(HorizontalCode39Q);
				else if (DistinctChars.substring(i,i+1).equals("R"))
					outputStream.write(HorizontalCode39R);
				else if (DistinctChars.substring(i,i+1).equals("S"))
					outputStream.write(HorizontalCode39S);
				else if (DistinctChars.substring(i,i+1).equals("T"))
					outputStream.write(HorizontalCode39T);
				else if (DistinctChars.substring(i,i+1).equals("U"))
					outputStream.write(HorizontalCode39U);
				else if (DistinctChars.substring(i,i+1).equals("V"))
					outputStream.write(HorizontalCode39V);
				else if (DistinctChars.substring(i,i+1).equals("W"))
					outputStream.write(HorizontalCode39W);				
				else if (DistinctChars.substring(i,i+1).equals("X"))
					outputStream.write(HorizontalCode39X);
				else if (DistinctChars.substring(i,i+1).equals("Y"))
					outputStream.write(HorizontalCode39Y);
				else if (DistinctChars.substring(i,i+1).equals("Z"))
					outputStream.write(HorizontalCode39Z);
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

    }
}
